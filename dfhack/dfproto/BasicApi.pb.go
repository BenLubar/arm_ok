// Code generated by protoc-gen-go.
// source: BasicApi.proto
// DO NOT EDIT!

package dfproto

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GetWorldInfoOut_Mode int32

const (
	GetWorldInfoOut_MODE_DWARF     GetWorldInfoOut_Mode = 1
	GetWorldInfoOut_MODE_ADVENTURE GetWorldInfoOut_Mode = 2
	GetWorldInfoOut_MODE_LEGENDS   GetWorldInfoOut_Mode = 3
)

var GetWorldInfoOut_Mode_name = map[int32]string{
	1: "MODE_DWARF",
	2: "MODE_ADVENTURE",
	3: "MODE_LEGENDS",
}
var GetWorldInfoOut_Mode_value = map[string]int32{
	"MODE_DWARF":     1,
	"MODE_ADVENTURE": 2,
	"MODE_LEGENDS":   3,
}

func (x GetWorldInfoOut_Mode) Enum() *GetWorldInfoOut_Mode {
	p := new(GetWorldInfoOut_Mode)
	*p = x
	return p
}
func (x GetWorldInfoOut_Mode) String() string {
	return proto.EnumName(GetWorldInfoOut_Mode_name, int32(x))
}
func (x *GetWorldInfoOut_Mode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetWorldInfoOut_Mode_value, data, "GetWorldInfoOut_Mode")
	if err != nil {
		return err
	}
	*x = GetWorldInfoOut_Mode(value)
	return nil
}

// RPC GetWorldInfo : EmptyMessage -> GetWorldInfoOut
type GetWorldInfoOut struct {
	Mode      *GetWorldInfoOut_Mode `protobuf:"varint,1,req,name=mode,enum=dfproto.GetWorldInfoOut_Mode" json:"mode,omitempty"`
	SaveDir   *string               `protobuf:"bytes,2,req,name=save_dir" json:"save_dir,omitempty"`
	WorldName *NameInfo             `protobuf:"bytes,3,opt,name=world_name" json:"world_name,omitempty"`
	// Dwarf mode
	CivId   *int32 `protobuf:"varint,4,opt,name=civ_id" json:"civ_id,omitempty"`
	SiteId  *int32 `protobuf:"varint,5,opt,name=site_id" json:"site_id,omitempty"`
	GroupId *int32 `protobuf:"varint,6,opt,name=group_id" json:"group_id,omitempty"`
	RaceId  *int32 `protobuf:"varint,7,opt,name=race_id" json:"race_id,omitempty"`
	// Adventure mode
	PlayerUnitId        *int32  `protobuf:"varint,8,opt,name=player_unit_id" json:"player_unit_id,omitempty"`
	PlayerHistfigId     *int32  `protobuf:"varint,9,opt,name=player_histfig_id" json:"player_histfig_id,omitempty"`
	CompanionHistfigIds []int32 `protobuf:"varint,10,rep,name=companion_histfig_ids" json:"companion_histfig_ids,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *GetWorldInfoOut) Reset()         { *m = GetWorldInfoOut{} }
func (m *GetWorldInfoOut) String() string { return proto.CompactTextString(m) }
func (*GetWorldInfoOut) ProtoMessage()    {}

func (m *GetWorldInfoOut) GetMode() GetWorldInfoOut_Mode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return GetWorldInfoOut_MODE_DWARF
}

func (m *GetWorldInfoOut) GetSaveDir() string {
	if m != nil && m.SaveDir != nil {
		return *m.SaveDir
	}
	return ""
}

func (m *GetWorldInfoOut) GetWorldName() *NameInfo {
	if m != nil {
		return m.WorldName
	}
	return nil
}

func (m *GetWorldInfoOut) GetCivId() int32 {
	if m != nil && m.CivId != nil {
		return *m.CivId
	}
	return 0
}

func (m *GetWorldInfoOut) GetSiteId() int32 {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return 0
}

func (m *GetWorldInfoOut) GetGroupId() int32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *GetWorldInfoOut) GetRaceId() int32 {
	if m != nil && m.RaceId != nil {
		return *m.RaceId
	}
	return 0
}

func (m *GetWorldInfoOut) GetPlayerUnitId() int32 {
	if m != nil && m.PlayerUnitId != nil {
		return *m.PlayerUnitId
	}
	return 0
}

func (m *GetWorldInfoOut) GetPlayerHistfigId() int32 {
	if m != nil && m.PlayerHistfigId != nil {
		return *m.PlayerHistfigId
	}
	return 0
}

func (m *GetWorldInfoOut) GetCompanionHistfigIds() []int32 {
	if m != nil {
		return m.CompanionHistfigIds
	}
	return nil
}

// RPC ListEnums : EmptyMessage -> ListEnumsOut
type ListEnumsOut struct {
	MaterialFlags    []*EnumItemName `protobuf:"bytes,1,rep,name=material_flags" json:"material_flags,omitempty"`
	InorganicFlags   []*EnumItemName `protobuf:"bytes,2,rep,name=inorganic_flags" json:"inorganic_flags,omitempty"`
	UnitFlags1       []*EnumItemName `protobuf:"bytes,3,rep,name=unit_flags1" json:"unit_flags1,omitempty"`
	UnitFlags2       []*EnumItemName `protobuf:"bytes,4,rep,name=unit_flags2" json:"unit_flags2,omitempty"`
	UnitFlags3       []*EnumItemName `protobuf:"bytes,5,rep,name=unit_flags3" json:"unit_flags3,omitempty"`
	UnitLabor        []*EnumItemName `protobuf:"bytes,6,rep,name=unit_labor" json:"unit_labor,omitempty"`
	JobSkill         []*EnumItemName `protobuf:"bytes,7,rep,name=job_skill" json:"job_skill,omitempty"`
	CieAddTagMask1   []*EnumItemName `protobuf:"bytes,8,rep,name=cie_add_tag_mask1" json:"cie_add_tag_mask1,omitempty"`
	CieAddTagMask2   []*EnumItemName `protobuf:"bytes,9,rep,name=cie_add_tag_mask2" json:"cie_add_tag_mask2,omitempty"`
	DeathInfoFlags   []*EnumItemName `protobuf:"bytes,10,rep,name=death_info_flags" json:"death_info_flags,omitempty"`
	Profession       []*EnumItemName `protobuf:"bytes,11,rep,name=profession" json:"profession,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListEnumsOut) Reset()         { *m = ListEnumsOut{} }
func (m *ListEnumsOut) String() string { return proto.CompactTextString(m) }
func (*ListEnumsOut) ProtoMessage()    {}

func (m *ListEnumsOut) GetMaterialFlags() []*EnumItemName {
	if m != nil {
		return m.MaterialFlags
	}
	return nil
}

func (m *ListEnumsOut) GetInorganicFlags() []*EnumItemName {
	if m != nil {
		return m.InorganicFlags
	}
	return nil
}

func (m *ListEnumsOut) GetUnitFlags1() []*EnumItemName {
	if m != nil {
		return m.UnitFlags1
	}
	return nil
}

func (m *ListEnumsOut) GetUnitFlags2() []*EnumItemName {
	if m != nil {
		return m.UnitFlags2
	}
	return nil
}

func (m *ListEnumsOut) GetUnitFlags3() []*EnumItemName {
	if m != nil {
		return m.UnitFlags3
	}
	return nil
}

func (m *ListEnumsOut) GetUnitLabor() []*EnumItemName {
	if m != nil {
		return m.UnitLabor
	}
	return nil
}

func (m *ListEnumsOut) GetJobSkill() []*EnumItemName {
	if m != nil {
		return m.JobSkill
	}
	return nil
}

func (m *ListEnumsOut) GetCieAddTagMask1() []*EnumItemName {
	if m != nil {
		return m.CieAddTagMask1
	}
	return nil
}

func (m *ListEnumsOut) GetCieAddTagMask2() []*EnumItemName {
	if m != nil {
		return m.CieAddTagMask2
	}
	return nil
}

func (m *ListEnumsOut) GetDeathInfoFlags() []*EnumItemName {
	if m != nil {
		return m.DeathInfoFlags
	}
	return nil
}

func (m *ListEnumsOut) GetProfession() []*EnumItemName {
	if m != nil {
		return m.Profession
	}
	return nil
}

// RPC ListJobSkills : EmptyMessage -> ListJobSkillsOut
type ListJobSkillsOut struct {
	Skill            []*JobSkillAttr   `protobuf:"bytes,1,rep,name=skill" json:"skill,omitempty"`
	Profession       []*ProfessionAttr `protobuf:"bytes,2,rep,name=profession" json:"profession,omitempty"`
	Labor            []*UnitLaborAttr  `protobuf:"bytes,3,rep,name=labor" json:"labor,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ListJobSkillsOut) Reset()         { *m = ListJobSkillsOut{} }
func (m *ListJobSkillsOut) String() string { return proto.CompactTextString(m) }
func (*ListJobSkillsOut) ProtoMessage()    {}

func (m *ListJobSkillsOut) GetSkill() []*JobSkillAttr {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *ListJobSkillsOut) GetProfession() []*ProfessionAttr {
	if m != nil {
		return m.Profession
	}
	return nil
}

func (m *ListJobSkillsOut) GetLabor() []*UnitLaborAttr {
	if m != nil {
		return m.Labor
	}
	return nil
}

// RPC ListMaterials : ListMaterialsIn -> ListMaterialsOut
type ListMaterialsIn struct {
	Mask *BasicMaterialInfoMask `protobuf:"bytes,1,opt,name=mask" json:"mask,omitempty"`
	// Specific materials:
	IdList []*BasicMaterialId `protobuf:"bytes,2,rep,name=id_list" json:"id_list,omitempty"`
	// Complete list by type:
	Builtin          *bool  `protobuf:"varint,3,opt,name=builtin" json:"builtin,omitempty"`
	Inorganic        *bool  `protobuf:"varint,4,opt,name=inorganic" json:"inorganic,omitempty"`
	Creatures        *bool  `protobuf:"varint,5,opt,name=creatures" json:"creatures,omitempty"`
	Plants           *bool  `protobuf:"varint,6,opt,name=plants" json:"plants,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListMaterialsIn) Reset()         { *m = ListMaterialsIn{} }
func (m *ListMaterialsIn) String() string { return proto.CompactTextString(m) }
func (*ListMaterialsIn) ProtoMessage()    {}

func (m *ListMaterialsIn) GetMask() *BasicMaterialInfoMask {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *ListMaterialsIn) GetIdList() []*BasicMaterialId {
	if m != nil {
		return m.IdList
	}
	return nil
}

func (m *ListMaterialsIn) GetBuiltin() bool {
	if m != nil && m.Builtin != nil {
		return *m.Builtin
	}
	return false
}

func (m *ListMaterialsIn) GetInorganic() bool {
	if m != nil && m.Inorganic != nil {
		return *m.Inorganic
	}
	return false
}

func (m *ListMaterialsIn) GetCreatures() bool {
	if m != nil && m.Creatures != nil {
		return *m.Creatures
	}
	return false
}

func (m *ListMaterialsIn) GetPlants() bool {
	if m != nil && m.Plants != nil {
		return *m.Plants
	}
	return false
}

type ListMaterialsOut struct {
	Value            []*BasicMaterialInfo `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ListMaterialsOut) Reset()         { *m = ListMaterialsOut{} }
func (m *ListMaterialsOut) String() string { return proto.CompactTextString(m) }
func (*ListMaterialsOut) ProtoMessage()    {}

func (m *ListMaterialsOut) GetValue() []*BasicMaterialInfo {
	if m != nil {
		return m.Value
	}
	return nil
}

// RPC ListUnits : ListUnitsIn -> ListUnitsOut
type ListUnitsIn struct {
	Mask *BasicUnitInfoMask `protobuf:"bytes,1,opt,name=mask" json:"mask,omitempty"`
	// Specific units:
	IdList []int32 `protobuf:"varint,2,rep,name=id_list" json:"id_list,omitempty"`
	// All units matching:
	ScanAll          *bool  `protobuf:"varint,5,opt,name=scan_all" json:"scan_all,omitempty"`
	Race             *int32 `protobuf:"varint,3,opt,name=race" json:"race,omitempty"`
	CivId            *int32 `protobuf:"varint,4,opt,name=civ_id" json:"civ_id,omitempty"`
	Dead             *bool  `protobuf:"varint,6,opt,name=dead" json:"dead,omitempty"`
	Alive            *bool  `protobuf:"varint,7,opt,name=alive" json:"alive,omitempty"`
	Sane             *bool  `protobuf:"varint,8,opt,name=sane" json:"sane,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListUnitsIn) Reset()         { *m = ListUnitsIn{} }
func (m *ListUnitsIn) String() string { return proto.CompactTextString(m) }
func (*ListUnitsIn) ProtoMessage()    {}

func (m *ListUnitsIn) GetMask() *BasicUnitInfoMask {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *ListUnitsIn) GetIdList() []int32 {
	if m != nil {
		return m.IdList
	}
	return nil
}

func (m *ListUnitsIn) GetScanAll() bool {
	if m != nil && m.ScanAll != nil {
		return *m.ScanAll
	}
	return false
}

func (m *ListUnitsIn) GetRace() int32 {
	if m != nil && m.Race != nil {
		return *m.Race
	}
	return 0
}

func (m *ListUnitsIn) GetCivId() int32 {
	if m != nil && m.CivId != nil {
		return *m.CivId
	}
	return 0
}

func (m *ListUnitsIn) GetDead() bool {
	if m != nil && m.Dead != nil {
		return *m.Dead
	}
	return false
}

func (m *ListUnitsIn) GetAlive() bool {
	if m != nil && m.Alive != nil {
		return *m.Alive
	}
	return false
}

func (m *ListUnitsIn) GetSane() bool {
	if m != nil && m.Sane != nil {
		return *m.Sane
	}
	return false
}

type ListUnitsOut struct {
	Value            []*BasicUnitInfo `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ListUnitsOut) Reset()         { *m = ListUnitsOut{} }
func (m *ListUnitsOut) String() string { return proto.CompactTextString(m) }
func (*ListUnitsOut) ProtoMessage()    {}

func (m *ListUnitsOut) GetValue() []*BasicUnitInfo {
	if m != nil {
		return m.Value
	}
	return nil
}

// RPC ListSquads : ListSquadsIn -> ListSquadsOut
type ListSquadsIn struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListSquadsIn) Reset()         { *m = ListSquadsIn{} }
func (m *ListSquadsIn) String() string { return proto.CompactTextString(m) }
func (*ListSquadsIn) ProtoMessage()    {}

type ListSquadsOut struct {
	Value            []*BasicSquadInfo `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ListSquadsOut) Reset()         { *m = ListSquadsOut{} }
func (m *ListSquadsOut) String() string { return proto.CompactTextString(m) }
func (*ListSquadsOut) ProtoMessage()    {}

func (m *ListSquadsOut) GetValue() []*BasicSquadInfo {
	if m != nil {
		return m.Value
	}
	return nil
}

// RPC SetUnitLabors : SetUnitLaborsIn -> EmptyMessage
type SetUnitLaborsIn struct {
	Change           []*UnitLaborState `protobuf:"bytes,1,rep,name=change" json:"change,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SetUnitLaborsIn) Reset()         { *m = SetUnitLaborsIn{} }
func (m *SetUnitLaborsIn) String() string { return proto.CompactTextString(m) }
func (*SetUnitLaborsIn) ProtoMessage()    {}

func (m *SetUnitLaborsIn) GetChange() []*UnitLaborState {
	if m != nil {
		return m.Change
	}
	return nil
}

func init() {
	proto.RegisterEnum("dfproto.GetWorldInfoOut_Mode", GetWorldInfoOut_Mode_name, GetWorldInfoOut_Mode_value)
}
