// Code generated by protoc-gen-go.
// source: Basic.proto
// DO NOT EDIT!

/*
Package dfproto is a generated protocol buffer package.

It is generated from these files:
	Basic.proto
	BasicApi.proto
	CoreProtocol.proto

It has these top-level messages:
	EnumItemName
	BasicMaterialId
	BasicMaterialInfo
	BasicMaterialInfoMask
	JobSkillAttr
	ProfessionAttr
	UnitLaborAttr
	NameInfo
	NameTriple
	UnitCurseInfo
	SkillInfo
	UnitMiscTrait
	BasicUnitInfo
	BasicUnitInfoMask
	BasicSquadInfo
	UnitLaborState
*/
package dfproto

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type BasicMaterialInfoMask_StateType int32

const (
	BasicMaterialInfoMask_Solid   BasicMaterialInfoMask_StateType = 0
	BasicMaterialInfoMask_Liquid  BasicMaterialInfoMask_StateType = 1
	BasicMaterialInfoMask_Gas     BasicMaterialInfoMask_StateType = 2
	BasicMaterialInfoMask_Powder  BasicMaterialInfoMask_StateType = 3
	BasicMaterialInfoMask_Paste   BasicMaterialInfoMask_StateType = 4
	BasicMaterialInfoMask_Pressed BasicMaterialInfoMask_StateType = 5
)

var BasicMaterialInfoMask_StateType_name = map[int32]string{
	0: "Solid",
	1: "Liquid",
	2: "Gas",
	3: "Powder",
	4: "Paste",
	5: "Pressed",
}
var BasicMaterialInfoMask_StateType_value = map[string]int32{
	"Solid":   0,
	"Liquid":  1,
	"Gas":     2,
	"Powder":  3,
	"Paste":   4,
	"Pressed": 5,
}

func (x BasicMaterialInfoMask_StateType) Enum() *BasicMaterialInfoMask_StateType {
	p := new(BasicMaterialInfoMask_StateType)
	*p = x
	return p
}
func (x BasicMaterialInfoMask_StateType) String() string {
	return proto.EnumName(BasicMaterialInfoMask_StateType_name, int32(x))
}
func (x *BasicMaterialInfoMask_StateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BasicMaterialInfoMask_StateType_value, data, "BasicMaterialInfoMask_StateType")
	if err != nil {
		return err
	}
	*x = BasicMaterialInfoMask_StateType(value)
	return nil
}

type EnumItemName struct {
	Value *int32  `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	Name  *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// For bitfield members
	BitSize          *int32 `protobuf:"varint,3,opt,name=bit_size,def=1" json:"bit_size,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *EnumItemName) Reset()         { *m = EnumItemName{} }
func (m *EnumItemName) String() string { return proto.CompactTextString(m) }
func (*EnumItemName) ProtoMessage()    {}

const Default_EnumItemName_BitSize int32 = 1

func (m *EnumItemName) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *EnumItemName) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *EnumItemName) GetBitSize() int32 {
	if m != nil && m.BitSize != nil {
		return *m.BitSize
	}
	return Default_EnumItemName_BitSize
}

type BasicMaterialId struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Index            *int32 `protobuf:"zigzag32,2,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BasicMaterialId) Reset()         { *m = BasicMaterialId{} }
func (m *BasicMaterialId) String() string { return proto.CompactTextString(m) }
func (*BasicMaterialId) ProtoMessage()    {}

func (m *BasicMaterialId) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BasicMaterialId) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type BasicMaterialInfo struct {
	Type  *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Index *int32 `protobuf:"zigzag32,2,req,name=index" json:"index,omitempty"`
	// The raw token
	Token *string `protobuf:"bytes,3,req,name=token" json:"token,omitempty"`
	// IF mask.flags:
	// List of material_flags indices
	Flags []int32 `protobuf:"varint,4,rep,name=flags" json:"flags,omitempty"`
	// Material type/index expanded:
	Subtype    *int32  `protobuf:"varint,5,opt,name=subtype,def=-1" json:"subtype,omitempty"`
	CreatureId *int32  `protobuf:"varint,6,opt,name=creature_id,def=-1" json:"creature_id,omitempty"`
	PlantId    *int32  `protobuf:"varint,7,opt,name=plant_id,def=-1" json:"plant_id,omitempty"`
	HistfigId  *int32  `protobuf:"varint,8,opt,name=histfig_id,def=-1" json:"histfig_id,omitempty"`
	NamePrefix *string `protobuf:"bytes,9,opt,name=name_prefix,def=" json:"name_prefix,omitempty"`
	// IF mask.states: in listed order;
	// ELSE: one state matching mask.temperature
	StateColor      []uint32                     `protobuf:"fixed32,10,rep,name=state_color" json:"state_color,omitempty"`
	StateName       []string                     `protobuf:"bytes,11,rep,name=state_name" json:"state_name,omitempty"`
	StateAdj        []string                     `protobuf:"bytes,12,rep,name=state_adj" json:"state_adj,omitempty"`
	ReactionClass   []string                     `protobuf:"bytes,13,rep,name=reaction_class" json:"reaction_class,omitempty"`
	ReactionProduct []*BasicMaterialInfo_Product `protobuf:"bytes,14,rep,name=reaction_product" json:"reaction_product,omitempty"`
	// IF mask.flags:
	InorganicFlags   []int32 `protobuf:"varint,15,rep,name=inorganic_flags" json:"inorganic_flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BasicMaterialInfo) Reset()         { *m = BasicMaterialInfo{} }
func (m *BasicMaterialInfo) String() string { return proto.CompactTextString(m) }
func (*BasicMaterialInfo) ProtoMessage()    {}

const Default_BasicMaterialInfo_Subtype int32 = -1
const Default_BasicMaterialInfo_CreatureId int32 = -1
const Default_BasicMaterialInfo_PlantId int32 = -1
const Default_BasicMaterialInfo_HistfigId int32 = -1

func (m *BasicMaterialInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BasicMaterialInfo) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *BasicMaterialInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *BasicMaterialInfo) GetFlags() []int32 {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *BasicMaterialInfo) GetSubtype() int32 {
	if m != nil && m.Subtype != nil {
		return *m.Subtype
	}
	return Default_BasicMaterialInfo_Subtype
}

func (m *BasicMaterialInfo) GetCreatureId() int32 {
	if m != nil && m.CreatureId != nil {
		return *m.CreatureId
	}
	return Default_BasicMaterialInfo_CreatureId
}

func (m *BasicMaterialInfo) GetPlantId() int32 {
	if m != nil && m.PlantId != nil {
		return *m.PlantId
	}
	return Default_BasicMaterialInfo_PlantId
}

func (m *BasicMaterialInfo) GetHistfigId() int32 {
	if m != nil && m.HistfigId != nil {
		return *m.HistfigId
	}
	return Default_BasicMaterialInfo_HistfigId
}

func (m *BasicMaterialInfo) GetNamePrefix() string {
	if m != nil && m.NamePrefix != nil {
		return *m.NamePrefix
	}
	return ""
}

func (m *BasicMaterialInfo) GetStateColor() []uint32 {
	if m != nil {
		return m.StateColor
	}
	return nil
}

func (m *BasicMaterialInfo) GetStateName() []string {
	if m != nil {
		return m.StateName
	}
	return nil
}

func (m *BasicMaterialInfo) GetStateAdj() []string {
	if m != nil {
		return m.StateAdj
	}
	return nil
}

func (m *BasicMaterialInfo) GetReactionClass() []string {
	if m != nil {
		return m.ReactionClass
	}
	return nil
}

func (m *BasicMaterialInfo) GetReactionProduct() []*BasicMaterialInfo_Product {
	if m != nil {
		return m.ReactionProduct
	}
	return nil
}

func (m *BasicMaterialInfo) GetInorganicFlags() []int32 {
	if m != nil {
		return m.InorganicFlags
	}
	return nil
}

// IF mask.reaction:
type BasicMaterialInfo_Product struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Type             *int32  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Index            *int32  `protobuf:"zigzag32,3,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BasicMaterialInfo_Product) Reset()         { *m = BasicMaterialInfo_Product{} }
func (m *BasicMaterialInfo_Product) String() string { return proto.CompactTextString(m) }
func (*BasicMaterialInfo_Product) ProtoMessage()    {}

func (m *BasicMaterialInfo_Product) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BasicMaterialInfo_Product) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BasicMaterialInfo_Product) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type BasicMaterialInfoMask struct {
	States           []BasicMaterialInfoMask_StateType `protobuf:"varint,1,rep,name=states,enum=dfproto.BasicMaterialInfoMask_StateType" json:"states,omitempty"`
	Temperature      *int32                            `protobuf:"varint,4,opt,name=temperature,def=10015" json:"temperature,omitempty"`
	Flags            *bool                             `protobuf:"varint,2,opt,name=flags,def=0" json:"flags,omitempty"`
	Reaction         *bool                             `protobuf:"varint,3,opt,name=reaction,def=0" json:"reaction,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *BasicMaterialInfoMask) Reset()         { *m = BasicMaterialInfoMask{} }
func (m *BasicMaterialInfoMask) String() string { return proto.CompactTextString(m) }
func (*BasicMaterialInfoMask) ProtoMessage()    {}

const Default_BasicMaterialInfoMask_Temperature int32 = 10015
const Default_BasicMaterialInfoMask_Flags bool = false
const Default_BasicMaterialInfoMask_Reaction bool = false

func (m *BasicMaterialInfoMask) GetStates() []BasicMaterialInfoMask_StateType {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *BasicMaterialInfoMask) GetTemperature() int32 {
	if m != nil && m.Temperature != nil {
		return *m.Temperature
	}
	return Default_BasicMaterialInfoMask_Temperature
}

func (m *BasicMaterialInfoMask) GetFlags() bool {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_BasicMaterialInfoMask_Flags
}

func (m *BasicMaterialInfoMask) GetReaction() bool {
	if m != nil && m.Reaction != nil {
		return *m.Reaction
	}
	return Default_BasicMaterialInfoMask_Reaction
}

type JobSkillAttr struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Caption          *string `protobuf:"bytes,3,opt,name=caption" json:"caption,omitempty"`
	CaptionNoun      *string `protobuf:"bytes,4,opt,name=caption_noun" json:"caption_noun,omitempty"`
	Profession       *int32  `protobuf:"varint,5,opt,name=profession" json:"profession,omitempty"`
	Labor            *int32  `protobuf:"varint,6,opt,name=labor" json:"labor,omitempty"`
	Type             *string `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *JobSkillAttr) Reset()         { *m = JobSkillAttr{} }
func (m *JobSkillAttr) String() string { return proto.CompactTextString(m) }
func (*JobSkillAttr) ProtoMessage()    {}

func (m *JobSkillAttr) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *JobSkillAttr) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *JobSkillAttr) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

func (m *JobSkillAttr) GetCaptionNoun() string {
	if m != nil && m.CaptionNoun != nil {
		return *m.CaptionNoun
	}
	return ""
}

func (m *JobSkillAttr) GetProfession() int32 {
	if m != nil && m.Profession != nil {
		return *m.Profession
	}
	return 0
}

func (m *JobSkillAttr) GetLabor() int32 {
	if m != nil && m.Labor != nil {
		return *m.Labor
	}
	return 0
}

func (m *JobSkillAttr) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type ProfessionAttr struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Caption          *string `protobuf:"bytes,3,opt,name=caption" json:"caption,omitempty"`
	Military         *bool   `protobuf:"varint,4,opt,name=military" json:"military,omitempty"`
	CanAssignLabor   *bool   `protobuf:"varint,5,opt,name=can_assign_labor" json:"can_assign_labor,omitempty"`
	Parent           *int32  `protobuf:"varint,6,opt,name=parent" json:"parent,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfessionAttr) Reset()         { *m = ProfessionAttr{} }
func (m *ProfessionAttr) String() string { return proto.CompactTextString(m) }
func (*ProfessionAttr) ProtoMessage()    {}

func (m *ProfessionAttr) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ProfessionAttr) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *ProfessionAttr) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

func (m *ProfessionAttr) GetMilitary() bool {
	if m != nil && m.Military != nil {
		return *m.Military
	}
	return false
}

func (m *ProfessionAttr) GetCanAssignLabor() bool {
	if m != nil && m.CanAssignLabor != nil {
		return *m.CanAssignLabor
	}
	return false
}

func (m *ProfessionAttr) GetParent() int32 {
	if m != nil && m.Parent != nil {
		return *m.Parent
	}
	return 0
}

type UnitLaborAttr struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Caption          *string `protobuf:"bytes,3,opt,name=caption" json:"caption,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnitLaborAttr) Reset()         { *m = UnitLaborAttr{} }
func (m *UnitLaborAttr) String() string { return proto.CompactTextString(m) }
func (*UnitLaborAttr) ProtoMessage()    {}

func (m *UnitLaborAttr) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitLaborAttr) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *UnitLaborAttr) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

type NameInfo struct {
	FirstName        *string `protobuf:"bytes,1,opt,name=first_name" json:"first_name,omitempty"`
	Nickname         *string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	LanguageId       *int32  `protobuf:"varint,3,opt,name=language_id,def=-1" json:"language_id,omitempty"`
	LastName         *string `protobuf:"bytes,4,opt,name=last_name" json:"last_name,omitempty"`
	EnglishName      *string `protobuf:"bytes,5,opt,name=english_name" json:"english_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameInfo) Reset()         { *m = NameInfo{} }
func (m *NameInfo) String() string { return proto.CompactTextString(m) }
func (*NameInfo) ProtoMessage()    {}

const Default_NameInfo_LanguageId int32 = -1

func (m *NameInfo) GetFirstName() string {
	if m != nil && m.FirstName != nil {
		return *m.FirstName
	}
	return ""
}

func (m *NameInfo) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *NameInfo) GetLanguageId() int32 {
	if m != nil && m.LanguageId != nil {
		return *m.LanguageId
	}
	return Default_NameInfo_LanguageId
}

func (m *NameInfo) GetLastName() string {
	if m != nil && m.LastName != nil {
		return *m.LastName
	}
	return ""
}

func (m *NameInfo) GetEnglishName() string {
	if m != nil && m.EnglishName != nil {
		return *m.EnglishName
	}
	return ""
}

type NameTriple struct {
	Normal           *string `protobuf:"bytes,1,req,name=normal" json:"normal,omitempty"`
	Plural           *string `protobuf:"bytes,2,opt,name=plural" json:"plural,omitempty"`
	Adjective        *string `protobuf:"bytes,3,opt,name=adjective" json:"adjective,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameTriple) Reset()         { *m = NameTriple{} }
func (m *NameTriple) String() string { return proto.CompactTextString(m) }
func (*NameTriple) ProtoMessage()    {}

func (m *NameTriple) GetNormal() string {
	if m != nil && m.Normal != nil {
		return *m.Normal
	}
	return ""
}

func (m *NameTriple) GetPlural() string {
	if m != nil && m.Plural != nil {
		return *m.Plural
	}
	return ""
}

func (m *NameTriple) GetAdjective() string {
	if m != nil && m.Adjective != nil {
		return *m.Adjective
	}
	return ""
}

type UnitCurseInfo struct {
	AddTags1         *uint32     `protobuf:"fixed32,1,req,name=add_tags1" json:"add_tags1,omitempty"`
	RemTags1         *uint32     `protobuf:"fixed32,2,req,name=rem_tags1" json:"rem_tags1,omitempty"`
	AddTags2         *uint32     `protobuf:"fixed32,3,req,name=add_tags2" json:"add_tags2,omitempty"`
	RemTags2         *uint32     `protobuf:"fixed32,4,req,name=rem_tags2" json:"rem_tags2,omitempty"`
	Name             *NameTriple `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UnitCurseInfo) Reset()         { *m = UnitCurseInfo{} }
func (m *UnitCurseInfo) String() string { return proto.CompactTextString(m) }
func (*UnitCurseInfo) ProtoMessage()    {}

func (m *UnitCurseInfo) GetAddTags1() uint32 {
	if m != nil && m.AddTags1 != nil {
		return *m.AddTags1
	}
	return 0
}

func (m *UnitCurseInfo) GetRemTags1() uint32 {
	if m != nil && m.RemTags1 != nil {
		return *m.RemTags1
	}
	return 0
}

func (m *UnitCurseInfo) GetAddTags2() uint32 {
	if m != nil && m.AddTags2 != nil {
		return *m.AddTags2
	}
	return 0
}

func (m *UnitCurseInfo) GetRemTags2() uint32 {
	if m != nil && m.RemTags2 != nil {
		return *m.RemTags2
	}
	return 0
}

func (m *UnitCurseInfo) GetName() *NameTriple {
	if m != nil {
		return m.Name
	}
	return nil
}

type SkillInfo struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Level            *int32 `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Experience       *int32 `protobuf:"varint,3,req,name=experience" json:"experience,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkillInfo) Reset()         { *m = SkillInfo{} }
func (m *SkillInfo) String() string { return proto.CompactTextString(m) }
func (*SkillInfo) ProtoMessage()    {}

func (m *SkillInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SkillInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *SkillInfo) GetExperience() int32 {
	if m != nil && m.Experience != nil {
		return *m.Experience
	}
	return 0
}

type UnitMiscTrait struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Value            *int32 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UnitMiscTrait) Reset()         { *m = UnitMiscTrait{} }
func (m *UnitMiscTrait) String() string { return proto.CompactTextString(m) }
func (*UnitMiscTrait) ProtoMessage()    {}

func (m *UnitMiscTrait) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitMiscTrait) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type BasicUnitInfo struct {
	UnitId     *int32    `protobuf:"varint,1,req,name=unit_id" json:"unit_id,omitempty"`
	PosX       *int32    `protobuf:"varint,13,req,name=pos_x" json:"pos_x,omitempty"`
	PosY       *int32    `protobuf:"varint,14,req,name=pos_y" json:"pos_y,omitempty"`
	PosZ       *int32    `protobuf:"varint,15,req,name=pos_z" json:"pos_z,omitempty"`
	Name       *NameInfo `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Flags1     *uint32   `protobuf:"fixed32,3,req,name=flags1" json:"flags1,omitempty"`
	Flags2     *uint32   `protobuf:"fixed32,4,req,name=flags2" json:"flags2,omitempty"`
	Flags3     *uint32   `protobuf:"fixed32,5,req,name=flags3" json:"flags3,omitempty"`
	Race       *int32    `protobuf:"varint,6,req,name=race" json:"race,omitempty"`
	Caste      *int32    `protobuf:"varint,7,req,name=caste" json:"caste,omitempty"`
	Gender     *int32    `protobuf:"varint,8,opt,name=gender,def=-1" json:"gender,omitempty"`
	CivId      *int32    `protobuf:"varint,9,opt,name=civ_id,def=-1" json:"civ_id,omitempty"`
	HistfigId  *int32    `protobuf:"varint,10,opt,name=histfig_id,def=-1" json:"histfig_id,omitempty"`
	DeathId    *int32    `protobuf:"varint,17,opt,name=death_id,def=-1" json:"death_id,omitempty"`
	DeathFlags *uint32   `protobuf:"varint,18,opt,name=death_flags" json:"death_flags,omitempty"`
	// IF mask.profession:
	SquadId          *int32  `protobuf:"varint,19,opt,name=squad_id,def=-1" json:"squad_id,omitempty"`
	SquadPosition    *int32  `protobuf:"varint,20,opt,name=squad_position,def=-1" json:"squad_position,omitempty"`
	Profession       *int32  `protobuf:"varint,22,opt,name=profession,def=-1" json:"profession,omitempty"`
	CustomProfession *string `protobuf:"bytes,23,opt,name=custom_profession" json:"custom_profession,omitempty"`
	// IF mask.labors:
	Labors []int32 `protobuf:"varint,11,rep,name=labors" json:"labors,omitempty"`
	// IF mask.skills:
	Skills []*SkillInfo `protobuf:"bytes,12,rep,name=skills" json:"skills,omitempty"`
	// IF mask.misc_traits:
	MiscTraits       []*UnitMiscTrait `protobuf:"bytes,24,rep,name=misc_traits" json:"misc_traits,omitempty"`
	Curse            *UnitCurseInfo   `protobuf:"bytes,16,opt,name=curse" json:"curse,omitempty"`
	Burrows          []int32          `protobuf:"varint,21,rep,name=burrows" json:"burrows,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *BasicUnitInfo) Reset()         { *m = BasicUnitInfo{} }
func (m *BasicUnitInfo) String() string { return proto.CompactTextString(m) }
func (*BasicUnitInfo) ProtoMessage()    {}

const Default_BasicUnitInfo_Gender int32 = -1
const Default_BasicUnitInfo_CivId int32 = -1
const Default_BasicUnitInfo_HistfigId int32 = -1
const Default_BasicUnitInfo_DeathId int32 = -1
const Default_BasicUnitInfo_SquadId int32 = -1
const Default_BasicUnitInfo_SquadPosition int32 = -1
const Default_BasicUnitInfo_Profession int32 = -1

func (m *BasicUnitInfo) GetUnitId() int32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *BasicUnitInfo) GetPosX() int32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *BasicUnitInfo) GetPosY() int32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *BasicUnitInfo) GetPosZ() int32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *BasicUnitInfo) GetName() *NameInfo {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *BasicUnitInfo) GetFlags1() uint32 {
	if m != nil && m.Flags1 != nil {
		return *m.Flags1
	}
	return 0
}

func (m *BasicUnitInfo) GetFlags2() uint32 {
	if m != nil && m.Flags2 != nil {
		return *m.Flags2
	}
	return 0
}

func (m *BasicUnitInfo) GetFlags3() uint32 {
	if m != nil && m.Flags3 != nil {
		return *m.Flags3
	}
	return 0
}

func (m *BasicUnitInfo) GetRace() int32 {
	if m != nil && m.Race != nil {
		return *m.Race
	}
	return 0
}

func (m *BasicUnitInfo) GetCaste() int32 {
	if m != nil && m.Caste != nil {
		return *m.Caste
	}
	return 0
}

func (m *BasicUnitInfo) GetGender() int32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return Default_BasicUnitInfo_Gender
}

func (m *BasicUnitInfo) GetCivId() int32 {
	if m != nil && m.CivId != nil {
		return *m.CivId
	}
	return Default_BasicUnitInfo_CivId
}

func (m *BasicUnitInfo) GetHistfigId() int32 {
	if m != nil && m.HistfigId != nil {
		return *m.HistfigId
	}
	return Default_BasicUnitInfo_HistfigId
}

func (m *BasicUnitInfo) GetDeathId() int32 {
	if m != nil && m.DeathId != nil {
		return *m.DeathId
	}
	return Default_BasicUnitInfo_DeathId
}

func (m *BasicUnitInfo) GetDeathFlags() uint32 {
	if m != nil && m.DeathFlags != nil {
		return *m.DeathFlags
	}
	return 0
}

func (m *BasicUnitInfo) GetSquadId() int32 {
	if m != nil && m.SquadId != nil {
		return *m.SquadId
	}
	return Default_BasicUnitInfo_SquadId
}

func (m *BasicUnitInfo) GetSquadPosition() int32 {
	if m != nil && m.SquadPosition != nil {
		return *m.SquadPosition
	}
	return Default_BasicUnitInfo_SquadPosition
}

func (m *BasicUnitInfo) GetProfession() int32 {
	if m != nil && m.Profession != nil {
		return *m.Profession
	}
	return Default_BasicUnitInfo_Profession
}

func (m *BasicUnitInfo) GetCustomProfession() string {
	if m != nil && m.CustomProfession != nil {
		return *m.CustomProfession
	}
	return ""
}

func (m *BasicUnitInfo) GetLabors() []int32 {
	if m != nil {
		return m.Labors
	}
	return nil
}

func (m *BasicUnitInfo) GetSkills() []*SkillInfo {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *BasicUnitInfo) GetMiscTraits() []*UnitMiscTrait {
	if m != nil {
		return m.MiscTraits
	}
	return nil
}

func (m *BasicUnitInfo) GetCurse() *UnitCurseInfo {
	if m != nil {
		return m.Curse
	}
	return nil
}

func (m *BasicUnitInfo) GetBurrows() []int32 {
	if m != nil {
		return m.Burrows
	}
	return nil
}

type BasicUnitInfoMask struct {
	Labors           *bool  `protobuf:"varint,1,opt,name=labors,def=0" json:"labors,omitempty"`
	Skills           *bool  `protobuf:"varint,2,opt,name=skills,def=0" json:"skills,omitempty"`
	Profession       *bool  `protobuf:"varint,3,opt,name=profession,def=0" json:"profession,omitempty"`
	MiscTraits       *bool  `protobuf:"varint,4,opt,name=misc_traits,def=0" json:"misc_traits,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BasicUnitInfoMask) Reset()         { *m = BasicUnitInfoMask{} }
func (m *BasicUnitInfoMask) String() string { return proto.CompactTextString(m) }
func (*BasicUnitInfoMask) ProtoMessage()    {}

const Default_BasicUnitInfoMask_Labors bool = false
const Default_BasicUnitInfoMask_Skills bool = false
const Default_BasicUnitInfoMask_Profession bool = false
const Default_BasicUnitInfoMask_MiscTraits bool = false

func (m *BasicUnitInfoMask) GetLabors() bool {
	if m != nil && m.Labors != nil {
		return *m.Labors
	}
	return Default_BasicUnitInfoMask_Labors
}

func (m *BasicUnitInfoMask) GetSkills() bool {
	if m != nil && m.Skills != nil {
		return *m.Skills
	}
	return Default_BasicUnitInfoMask_Skills
}

func (m *BasicUnitInfoMask) GetProfession() bool {
	if m != nil && m.Profession != nil {
		return *m.Profession
	}
	return Default_BasicUnitInfoMask_Profession
}

func (m *BasicUnitInfoMask) GetMiscTraits() bool {
	if m != nil && m.MiscTraits != nil {
		return *m.MiscTraits
	}
	return Default_BasicUnitInfoMask_MiscTraits
}

type BasicSquadInfo struct {
	SquadId *int32    `protobuf:"varint,1,req,name=squad_id" json:"squad_id,omitempty"`
	Name    *NameInfo `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// A special field completely overriding the name:
	Alias *string `protobuf:"bytes,3,opt,name=alias" json:"alias,omitempty"`
	// Member histfig ids:
	Members          []int32 `protobuf:"zigzag32,4,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BasicSquadInfo) Reset()         { *m = BasicSquadInfo{} }
func (m *BasicSquadInfo) String() string { return proto.CompactTextString(m) }
func (*BasicSquadInfo) ProtoMessage()    {}

func (m *BasicSquadInfo) GetSquadId() int32 {
	if m != nil && m.SquadId != nil {
		return *m.SquadId
	}
	return 0
}

func (m *BasicSquadInfo) GetName() *NameInfo {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *BasicSquadInfo) GetAlias() string {
	if m != nil && m.Alias != nil {
		return *m.Alias
	}
	return ""
}

func (m *BasicSquadInfo) GetMembers() []int32 {
	if m != nil {
		return m.Members
	}
	return nil
}

type UnitLaborState struct {
	UnitId           *int32 `protobuf:"varint,1,req,name=unit_id" json:"unit_id,omitempty"`
	Labor            *int32 `protobuf:"varint,2,req,name=labor" json:"labor,omitempty"`
	Value            *bool  `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UnitLaborState) Reset()         { *m = UnitLaborState{} }
func (m *UnitLaborState) String() string { return proto.CompactTextString(m) }
func (*UnitLaborState) ProtoMessage()    {}

func (m *UnitLaborState) GetUnitId() int32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *UnitLaborState) GetLabor() int32 {
	if m != nil && m.Labor != nil {
		return *m.Labor
	}
	return 0
}

func (m *UnitLaborState) GetValue() bool {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return false
}

func init() {
	proto.RegisterEnum("dfproto.BasicMaterialInfoMask_StateType", BasicMaterialInfoMask_StateType_name, BasicMaterialInfoMask_StateType_value)
}
