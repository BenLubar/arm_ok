// Code generated by protoc-gen-go.
// source: CoreProtocol.proto
// DO NOT EDIT!

package dfproto

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CoreTextFragment_Color int32

const (
	CoreTextFragment_COLOR_BLACK        CoreTextFragment_Color = 0
	CoreTextFragment_COLOR_BLUE         CoreTextFragment_Color = 1
	CoreTextFragment_COLOR_GREEN        CoreTextFragment_Color = 2
	CoreTextFragment_COLOR_CYAN         CoreTextFragment_Color = 3
	CoreTextFragment_COLOR_RED          CoreTextFragment_Color = 4
	CoreTextFragment_COLOR_MAGENTA      CoreTextFragment_Color = 5
	CoreTextFragment_COLOR_BROWN        CoreTextFragment_Color = 6
	CoreTextFragment_COLOR_GREY         CoreTextFragment_Color = 7
	CoreTextFragment_COLOR_DARKGREY     CoreTextFragment_Color = 8
	CoreTextFragment_COLOR_LIGHTBLUE    CoreTextFragment_Color = 9
	CoreTextFragment_COLOR_LIGHTGREEN   CoreTextFragment_Color = 10
	CoreTextFragment_COLOR_LIGHTCYAN    CoreTextFragment_Color = 11
	CoreTextFragment_COLOR_LIGHTRED     CoreTextFragment_Color = 12
	CoreTextFragment_COLOR_LIGHTMAGENTA CoreTextFragment_Color = 13
	CoreTextFragment_COLOR_YELLOW       CoreTextFragment_Color = 14
	CoreTextFragment_COLOR_WHITE        CoreTextFragment_Color = 15
)

var CoreTextFragment_Color_name = map[int32]string{
	0:  "COLOR_BLACK",
	1:  "COLOR_BLUE",
	2:  "COLOR_GREEN",
	3:  "COLOR_CYAN",
	4:  "COLOR_RED",
	5:  "COLOR_MAGENTA",
	6:  "COLOR_BROWN",
	7:  "COLOR_GREY",
	8:  "COLOR_DARKGREY",
	9:  "COLOR_LIGHTBLUE",
	10: "COLOR_LIGHTGREEN",
	11: "COLOR_LIGHTCYAN",
	12: "COLOR_LIGHTRED",
	13: "COLOR_LIGHTMAGENTA",
	14: "COLOR_YELLOW",
	15: "COLOR_WHITE",
}
var CoreTextFragment_Color_value = map[string]int32{
	"COLOR_BLACK":        0,
	"COLOR_BLUE":         1,
	"COLOR_GREEN":        2,
	"COLOR_CYAN":         3,
	"COLOR_RED":          4,
	"COLOR_MAGENTA":      5,
	"COLOR_BROWN":        6,
	"COLOR_GREY":         7,
	"COLOR_DARKGREY":     8,
	"COLOR_LIGHTBLUE":    9,
	"COLOR_LIGHTGREEN":   10,
	"COLOR_LIGHTCYAN":    11,
	"COLOR_LIGHTRED":     12,
	"COLOR_LIGHTMAGENTA": 13,
	"COLOR_YELLOW":       14,
	"COLOR_WHITE":        15,
}

func (x CoreTextFragment_Color) Enum() *CoreTextFragment_Color {
	p := new(CoreTextFragment_Color)
	*p = x
	return p
}
func (x CoreTextFragment_Color) String() string {
	return proto.EnumName(CoreTextFragment_Color_name, int32(x))
}
func (x *CoreTextFragment_Color) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CoreTextFragment_Color_value, data, "CoreTextFragment_Color")
	if err != nil {
		return err
	}
	*x = CoreTextFragment_Color(value)
	return nil
}

type CoreErrorNotification_ErrorCode int32

const (
	CoreErrorNotification_CR_LINK_FAILURE    CoreErrorNotification_ErrorCode = -3
	CoreErrorNotification_CR_WOULD_BREAK     CoreErrorNotification_ErrorCode = -2
	CoreErrorNotification_CR_NOT_IMPLEMENTED CoreErrorNotification_ErrorCode = -1
	CoreErrorNotification_CR_OK              CoreErrorNotification_ErrorCode = 0
	CoreErrorNotification_CR_FAILURE         CoreErrorNotification_ErrorCode = 1
	CoreErrorNotification_CR_WRONG_USAGE     CoreErrorNotification_ErrorCode = 2
	CoreErrorNotification_CR_NOT_FOUND       CoreErrorNotification_ErrorCode = 3
)

var CoreErrorNotification_ErrorCode_name = map[int32]string{
	-3: "CR_LINK_FAILURE",
	-2: "CR_WOULD_BREAK",
	-1: "CR_NOT_IMPLEMENTED",
	0:  "CR_OK",
	1:  "CR_FAILURE",
	2:  "CR_WRONG_USAGE",
	3:  "CR_NOT_FOUND",
}
var CoreErrorNotification_ErrorCode_value = map[string]int32{
	"CR_LINK_FAILURE":    -3,
	"CR_WOULD_BREAK":     -2,
	"CR_NOT_IMPLEMENTED": -1,
	"CR_OK":              0,
	"CR_FAILURE":         1,
	"CR_WRONG_USAGE":     2,
	"CR_NOT_FOUND":       3,
}

func (x CoreErrorNotification_ErrorCode) Enum() *CoreErrorNotification_ErrorCode {
	p := new(CoreErrorNotification_ErrorCode)
	*p = x
	return p
}
func (x CoreErrorNotification_ErrorCode) String() string {
	return proto.EnumName(CoreErrorNotification_ErrorCode_name, int32(x))
}
func (x *CoreErrorNotification_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CoreErrorNotification_ErrorCode_value, data, "CoreErrorNotification_ErrorCode")
	if err != nil {
		return err
	}
	*x = CoreErrorNotification_ErrorCode(value)
	return nil
}

type CoreTextFragment struct {
	Text             *string                 `protobuf:"bytes,1,req,name=text" json:"text,omitempty"`
	Color            *CoreTextFragment_Color `protobuf:"varint,2,opt,name=color,enum=dfproto.CoreTextFragment_Color" json:"color,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CoreTextFragment) Reset()         { *m = CoreTextFragment{} }
func (m *CoreTextFragment) String() string { return proto.CompactTextString(m) }
func (*CoreTextFragment) ProtoMessage()    {}

func (m *CoreTextFragment) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CoreTextFragment) GetColor() CoreTextFragment_Color {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return CoreTextFragment_COLOR_BLACK
}

type CoreTextNotification struct {
	Fragments        []*CoreTextFragment `protobuf:"bytes,1,rep,name=fragments" json:"fragments,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CoreTextNotification) Reset()         { *m = CoreTextNotification{} }
func (m *CoreTextNotification) String() string { return proto.CompactTextString(m) }
func (*CoreTextNotification) ProtoMessage()    {}

func (m *CoreTextNotification) GetFragments() []*CoreTextFragment {
	if m != nil {
		return m.Fragments
	}
	return nil
}

type CoreErrorNotification struct {
	Code             *CoreErrorNotification_ErrorCode `protobuf:"varint,1,req,name=code,enum=dfproto.CoreErrorNotification_ErrorCode" json:"code,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *CoreErrorNotification) Reset()         { *m = CoreErrorNotification{} }
func (m *CoreErrorNotification) String() string { return proto.CompactTextString(m) }
func (*CoreErrorNotification) ProtoMessage()    {}

func (m *CoreErrorNotification) GetCode() CoreErrorNotification_ErrorCode {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return CoreErrorNotification_CR_LINK_FAILURE
}

type EmptyMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}

type IntMessage struct {
	Value            *int32 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IntMessage) Reset()         { *m = IntMessage{} }
func (m *IntMessage) String() string { return proto.CompactTextString(m) }
func (*IntMessage) ProtoMessage()    {}

func (m *IntMessage) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type IntListMessage struct {
	Value            []int32 `protobuf:"varint,1,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IntListMessage) Reset()         { *m = IntListMessage{} }
func (m *IntListMessage) String() string { return proto.CompactTextString(m) }
func (*IntListMessage) ProtoMessage()    {}

func (m *IntListMessage) GetValue() []int32 {
	if m != nil {
		return m.Value
	}
	return nil
}

type StringMessage struct {
	Value            *string `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StringMessage) Reset()         { *m = StringMessage{} }
func (m *StringMessage) String() string { return proto.CompactTextString(m) }
func (*StringMessage) ProtoMessage()    {}

func (m *StringMessage) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type StringListMessage struct {
	Value            []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *StringListMessage) Reset()         { *m = StringListMessage{} }
func (m *StringListMessage) String() string { return proto.CompactTextString(m) }
func (*StringListMessage) ProtoMessage()    {}

func (m *StringListMessage) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

// RPC BindMethod : CoreBindRequest -> CoreBindReply
type CoreBindRequest struct {
	Method           *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	InputMsg         *string `protobuf:"bytes,2,req,name=input_msg" json:"input_msg,omitempty"`
	OutputMsg        *string `protobuf:"bytes,3,req,name=output_msg" json:"output_msg,omitempty"`
	Plugin           *string `protobuf:"bytes,4,opt,name=plugin" json:"plugin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CoreBindRequest) Reset()         { *m = CoreBindRequest{} }
func (m *CoreBindRequest) String() string { return proto.CompactTextString(m) }
func (*CoreBindRequest) ProtoMessage()    {}

func (m *CoreBindRequest) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *CoreBindRequest) GetInputMsg() string {
	if m != nil && m.InputMsg != nil {
		return *m.InputMsg
	}
	return ""
}

func (m *CoreBindRequest) GetOutputMsg() string {
	if m != nil && m.OutputMsg != nil {
		return *m.OutputMsg
	}
	return ""
}

func (m *CoreBindRequest) GetPlugin() string {
	if m != nil && m.Plugin != nil {
		return *m.Plugin
	}
	return ""
}

type CoreBindReply struct {
	AssignedId       *int32 `protobuf:"varint,1,req,name=assigned_id" json:"assigned_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CoreBindReply) Reset()         { *m = CoreBindReply{} }
func (m *CoreBindReply) String() string { return proto.CompactTextString(m) }
func (*CoreBindReply) ProtoMessage()    {}

func (m *CoreBindReply) GetAssignedId() int32 {
	if m != nil && m.AssignedId != nil {
		return *m.AssignedId
	}
	return 0
}

// RPC RunCommand : CoreRunCommandRequest -> EmptyMessage
type CoreRunCommandRequest struct {
	Command          *string  `protobuf:"bytes,1,req,name=command" json:"command,omitempty"`
	Arguments        []string `protobuf:"bytes,2,rep,name=arguments" json:"arguments,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CoreRunCommandRequest) Reset()         { *m = CoreRunCommandRequest{} }
func (m *CoreRunCommandRequest) String() string { return proto.CompactTextString(m) }
func (*CoreRunCommandRequest) ProtoMessage()    {}

func (m *CoreRunCommandRequest) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

func (m *CoreRunCommandRequest) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

// RPC RunLua : CoreRunLuaRequest -> StringListMessage
type CoreRunLuaRequest struct {
	Module           *string  `protobuf:"bytes,1,req,name=module" json:"module,omitempty"`
	Function         *string  `protobuf:"bytes,2,req,name=function" json:"function,omitempty"`
	Arguments        []string `protobuf:"bytes,3,rep,name=arguments" json:"arguments,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CoreRunLuaRequest) Reset()         { *m = CoreRunLuaRequest{} }
func (m *CoreRunLuaRequest) String() string { return proto.CompactTextString(m) }
func (*CoreRunLuaRequest) ProtoMessage()    {}

func (m *CoreRunLuaRequest) GetModule() string {
	if m != nil && m.Module != nil {
		return *m.Module
	}
	return ""
}

func (m *CoreRunLuaRequest) GetFunction() string {
	if m != nil && m.Function != nil {
		return *m.Function
	}
	return ""
}

func (m *CoreRunLuaRequest) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func init() {
	proto.RegisterEnum("dfproto.CoreTextFragment_Color", CoreTextFragment_Color_name, CoreTextFragment_Color_value)
	proto.RegisterEnum("dfproto.CoreErrorNotification_ErrorCode", CoreErrorNotification_ErrorCode_name, CoreErrorNotification_ErrorCode_value)
}
